import React from "react";
import { add, update } from "../../../services/vulnService";
import { useState } from "react";

const VulnerabilityForm = (props) => {
  const [formData, setFormData] = useState({
    title: '',
    AV: '',
    AC: '',
    PR: '',
    UI: '',
    S: '',
    C: '',
    A: '',
    description: '',
    status : '',
    discoveredAt :'',
    app: ''
  });

  function handleChange(evt) {
      setFormData({...formData, [evt.target.name] : evt.target.value})
      console.log(formData)
  }


  async function handleSubmit(evt) {
    evt.preventDefault()
    console.log(formData)
    try {
       const res=  await add(formData)
       if( res.status == 201)
       {
        props.getAllVulns()
        props.handleFormView()
       }
    } catch (err) {
      console.log(err);
    }
  }

  return (
    <>
      <h1>Add Vulnerability</h1>
      <form onSubmit={handleSubmit}>
        <label htmlFor="title">Title: </label>
        <input type="text" id="title" name='title' onChange={handleChange} />

        <div id="cal">
          <div>
            <h4>Attack vector</h4>
            <label htmlFor="av-n">Network(N)</label>
            <input type="radio" name="AV" id="av-n" value="N" onChange={handleChange}/>

            <label htmlFor="av-a">Adjacent(A)</label>
            <input type="radio" name="AV" id="av-a" value="A" onChange={handleChange} />

            <label htmlFor="av-l">Local(L)</label>
            <input type="radio" name="AV" id="av-l" value="L" onChange={handleChange} />

            <label htmlFor="av-p">Physical</label>
            <input type="radio" name="AV" id="av-p" value="P" onChange={handleChange} />
          </div>

          <div>
            <h4>Attack Complexity</h4>
            <label htmlFor="ac-l">Low(L)</label>
            <input type="radio" id="ac-l" name="AC" value="L" onChange={handleChange}/>

            <label htmlFor="ac-h">High(H)</label>
            <input type="radio" id="ac-h" name="AC" value="H" onChange={handleChange} />
          </div>

          <div>
            <h4>Privileges Required</h4>
            <label htmlFor="pr-n">None(N)</label>
            <input type="radio" id="pr-n" name="PR" value="N" onChange={handleChange}/>

            <label htmlFor="pr-l">Low(L)</label>
            <input type="radio" id="pr-l" name="PR" value="L" onChange={handleChange}/>

            <label htmlFor="pr-h">High(H)</label>
            <input type="radio" id="pr-h" name="PR" value="H" onChange={handleChange}/>
          </div>

          <div>
            <h4>User Interaction</h4>
            <label htmlFor="ui-n">None</label>
            <input type="radio" id="ui-n" name="UI" value="N" onChange={handleChange} />

            <label htmlFor="ui-r">Required</label>
            <input type="radio" id="ui-r" name="UI" value="R" onChange={handleChange}/>
          </div>

          <div>
            <h4>Scope</h4>
            <label htmlFor="s-u">Unchanged</label>
            <input type="radio" id="s-u" name="S" value="U" onChange={handleChange}/>

            <label htmlFor="s-c">Changed</label>
            <input type="radio" id="s-c" name="S" value="C" onChange={handleChange}/>
          </div>

          <div>
            <h4>Confidentiality</h4>
            <label htmlFor="c-n">None</label>
            <input type="radio" id="c-n" name="C" value="N" onChange={handleChange}/>

            <label htmlFor="c-l">Low</label>
            <input type="radio" id="c-l" name="C" value="L" onChange={handleChange}/>

            <label htmlFor="c-h">High</label>
            <input type="radio" id="c-h" name="C" value="H" onChange={handleChange}/>
          </div>

          <div>
            <h4>Integrity</h4>
            <label htmlFor="i-n">None</label>
            <input type="radio" id="i-n" name="I" value="N" onChange={handleChange}/>

            <label htmlFor="i-l">Low</label>
            <input type="radio" id="i-l" name="I" value="L" onChange={handleChange}/>

            <label htmlFor="i-h">High</label>
            <input type="radio" id="i-h" name="I" value="H" onChange={handleChange}/>
          </div>

          <div>
            <h4>Availability</h4>
            <label htmlFor="a-n">None</label>
            <input type="radio" id="a-n" name="A" value="N" onChange={handleChange}/>

            <label htmlFor="a-l">Low</label>
            <input type="radio" id="a-l" name="A" value="L" onChange={handleChange} />

            <label htmlFor="a-h">High</label>
            <input type="radio" id="a-h" name="A" value="H" onChange={handleChange}/>
          </div>
        </div>

        <label htmlFor="description">Description</label>
        <textarea name="description" id="description" onChange={handleChange}></textarea>

        <label htmlFor="status">Status: </label>
        <select name="status" id="status" onChange={handleChange}>
          <option value="Open">Open</option>
          <option value="In progress">In progress</option>
          <option value="Fixed">Fixed</option>
        </select>

        {/* <label>app: </label>
        <select>
            <option></option>
        </select> */}

        <label htmlFor="discovered-date">Discovered at: </label>
        <input type="date" id='discovered-date' name='discoveredAt' onChange={handleChange}/>

        <label htmlFor="app">APP: </label>
        <input type="text" id='app' name='app' onChange={handleChange} />

        <button type="submit">Add</button>
      </form>
      <br />
      <button onClick={props.handleFormView}>BACK</button>
    </>
  );
};

export default VulnerabilityForm;
